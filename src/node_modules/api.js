import { stringify } from "qs";

export function send({ method, path, data, token, fetchInstance }) {
	let myFetch = fetchInstance;

	if (!myFetch) {
		if (!testFetch()) {
			return;
		}
		myFetch = fetch;
	}

	const opts = { method, headers: {} };

	if (data) {
		opts.headers['Content-Type'] = 'application/json';
		opts.body = JSON.stringify(data);
	}

	if (token) {
		opts.headers['Authorization'] = `Token ${token}`;
	}

	return myFetch(path, opts)
		.then(r => r.text())
		.then(json => {
			try {
				return JSON.parse(json);
			} catch (err) {
				return json;
			}
		});
}

export function testFetch() {
  try {
    // fetch: we are on the browser
    fetch;
    return true;
  } catch(e) {
    // no fetch, we are on the server
    return false;
  }
}

export function get(path, token, opts = {}) {
	if (opts.qs) {
		path = `${path}?${stringify(opts.qs)}`;
	}
	return send({ method: 'GET', path, token });
}

export function del(path, token) {
	return send({ method: 'DELETE', path, token });
}

export function post(path, data, token) {
	return send({ method: 'POST', path, data, token });
}

export function put(path, data, token) {
	return send({ method: 'PUT', path, data, token });
}
